syntax on

imap jk <ESC>
noremap <silent> <C-S>          :update<CR>
vnoremap <silent> <C-S>         <C-C>:update<CR>
inoremap <silent> <C-S>         <C-O>:update<CR>

" Remap code completion to Ctrl+Space {{{2
inoremap <Nul> <C-x><C-u>
inoremap <C-j> <C-n>
inoremap <C-k> <C-p>

nnoremap <S-k> k.
nnoremap <S-j> j.

"nnoremap <silent> <leader>] :JavaSearch<CR>
"nnoremap <silent> <leader>[ :JavaCorrect<CR>
nnoremap <silent> <leader>m :call ToggleMouse()<CR>

nnoremap <silent> <leader>c :%y+<CR>

set mouse=a
let g:mouse_on = 1
function! ToggleMouse()
	if g:mouse_on
		setlocal mouse=
		let g:mouse_on = 0
	else
		setlocal mouse=a
		let g:mouse_on = 1
	endif
endfunction

" Let alt key work in gnome-terminal
let c='a'
while c <= 'z'
  exec "set <A-".c.">=\e".c
  exec "imap \e".c." <A-".c.">"
  let c = nr2char(1+char2nr(c))
endw

let java_highlight_functions = 1
let java_highlight_all = 1

" Some more highlights, in addition to those suggested by cmcginty
"highlight link javaScopeDecl Statement
"highlight link javaType Type
"highlight link javaDocTags PreProc

set timeout ttimeoutlen=50


" NETRW
"let g:netrw_ftp_cmd="lftp"

set t_kb=
set nocompatible
set backspace=eol,indent,start
set autoindent
set smartindent
set nofixendofline

" don't highlight the last search upon startup
set viminfo="h"


" Do C-style auto indentation on C/C++/Perl files only :)
:filetype on
:autocmd FileType c,cpp,perl :set cindent

" stop Vim from beeping all the time
set novb
set noeb

set tabstop=4
set shiftwidth=4
set softtabstop=4
"set tabstop=2
"set shiftwidth=2
"set softtabstop=2
set smarttab

" spaces instead of a tab when tab is pressed
"set expandtab

set ruler
set background=dark

"Tell you if you are in insert mode
set showmode

"show cmd in status line
set showcmd

"match parenthesis, i.e. ) with (  and } with {
set showmatch

"ignore case when doing searches
set ignorecase
set smartcase

"tell you how many lines have been changed
set report=0

set scrolloff=5
set wildmode=longest,list
"set incsearch
"set hlsearch
set nohlsearch


set showtabline=2

set undofile
set undodir=~/.vim/undofiles

" Set the following lines in your ~/.vimrc or the systemwide /etc/vimrc:
filetype plugin indent on
set grepprg=grep\ -nH\ $*
let g:tex_flavor = "latex"
 
" Also, this installs to /usr/share/vim/vimfiles, which may not be in
" your runtime path (RTP). Be sure to add it too, e.g:
set runtimepath=~/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,~/.vim/after
"execute pathogen#infect()
"call pathogen#helptags()

"au BufWritePost *.php silent! !eval '[ -f ".git/hooks/ctags" ] && .git/hooks/ctags' &

let g:nnn#command = 'nnn -o'

" kitty terminal stuff
set ttymouse=sgr
set balloonevalterm
" Styled and colored underline support
let &t_AU = "\e[58:5:%dm"
let &t_8u = "\e[58:2:%lu:%lu:%lum"
let &t_Us = "\e[4:2m"
let &t_Cs = "\e[4:3m"
let &t_ds = "\e[4:4m"
let &t_Ds = "\e[4:5m"
let &t_Ce = "\e[4:0m"
" Strikethrough
let &t_Ts = "\e[9m"
let &t_Te = "\e[29m"
" Truecolor support
let &t_8f = "\e[38:2:%lu:%lu:%lum"
let &t_8b = "\e[48:2:%lu:%lu:%lum"
let &t_RF = "\e]10;?\e\\"
let &t_RB = "\e]11;?\e\\"
" Bracketed paste
let &t_BE = "\e[?2004h"
let &t_BD = "\e[?2004l"
let &t_PS = "\e[200~"
let &t_PE = "\e[201~"
" Cursor control
let &t_RC = "\e[?12$p"
let &t_SH = "\e[%d q"
let &t_RS = "\eP$q q\e\\"
let &t_SI = "\e[5 q"
let &t_SR = "\e[3 q"
let &t_EI = "\e[1 q"
let &t_VS = "\e[?12l"
" Focus tracking
let &t_fe = "\e[?1004h"
let &t_fd = "\e[?1004l"
execute "set <FocusGained>=\<Esc>[I"
execute "set <FocusLost>=\<Esc>[O"
" Window title
let &t_ST = "\e[22;2t"
let &t_RT = "\e[23;2t"

" vim hardcodes background color erase even if the terminfo file does
" not contain bce. This causes incorrect background rendering when
" using a color theme with a background color in terminals such as
" kitty that do not support background color erase.
let &t_ut=''

colorscheme elflord
